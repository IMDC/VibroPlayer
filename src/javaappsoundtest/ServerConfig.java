/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package javaappsoundtest;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.Writer;

/**
 *
 * @author imdc
 */
public class ServerConfig extends javax.swing.JFrame {

    /**
     * Creates new form ServerConfig
     */
    public ServerConfig() {
        initComponents();
        
        /* check if the config file already exists. If not creates it. Otherwise loads it. */
        if ( !ServerGUI.path.exists() ) {
            ServerGUI.path.mkdir();
            try {
                ServerGUI.config.createNewFile();
            } catch (IOException ex) {
                System.out.println ( ex );
            }
        }
        else {
            if ( !ServerGUI.config.exists() ) {
                try {
                    ServerGUI.config.createNewFile();
                } catch (IOException ex) {
                    System.out.println ( ex );
                }
            }
            else {
                /* Load the file information */
                try {
                    BufferedReader reader = new BufferedReader ( new FileReader ( ServerGUI.config ) );
                    
                    String line = null;
                    
                    while ( ( line = reader.readLine() ) != null ) {
                        String split[] = line.split ( ";" );
                        
                        if ( split[0].equals ( "Port" ) ) {
                            port.setText ( split[1] );
                        }
                    }
                }
                catch ( FileNotFoundException ex ) {
                    System.out.println ( ex );
                }
                catch ( IOException ex ) {
                    System.out.println ( ex );
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        port = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Port:");

        port.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                portKeyReleased(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(saveButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                .addComponent(saveButton)
                .addGap(45, 45, 45))
        );

        setSize(new java.awt.Dimension(416, 338));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Create the listener to save button which saves the current information in the config.txt file.
     */
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        
        saveInformation();
        
    }//GEN-LAST:event_saveButtonActionPerformed

    private void portKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_portKeyReleased
        
        if ( evt.getKeyCode() == 10 ) {
            saveInformation();
        }
        
    }//GEN-LAST:event_portKeyReleased

    private void saveInformation () {
        /* Validate information */
        try {
            Integer integerPort = Integer.parseInt ( port.getText() );
            Writer writer = new BufferedWriter ( new OutputStreamWriter ( new FileOutputStream ( ServerGUI.config ) ) );

            /* Write the information according to the pattern */
            writer.write ( "Port;" + integerPort );
            writer.close();
            
            System.out.println ( "File saved." );
        }
        catch ( FileNotFoundException ex ) {
            System.out.println ( ex );
        }
        catch ( IOException ex ) { 
            System.out.println ( ex );
        }
        catch ( NumberFormatException ex ) {
            System.out.println ( "Port value is not valid." );
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField port;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
