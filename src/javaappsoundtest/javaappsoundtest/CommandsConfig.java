/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package javaappsoundtest;

import java.io.File;
import java.io.IOException;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author imdc
 */
public class CommandsConfig extends javax.swing.JFrame {

    private File chosenFile;
    static SoundTableModel sounds;
    
    /**
     * Creates new form CommandsConfig
     */
    public CommandsConfig ( SoundTableModel sounds ) {
        this.sounds = sounds;
        
        chosenFile = null;
        
        initComponents();
        
        insertCommand.setDocument ( new FixedLengthDocument ( 10 ) );
        
        /* check if the file already exists */
        File destination = new File ( ServerGUI.getSoundsPath() );
        
        if ( !destination.exists() ) {
            destination.mkdir();
        }
        
        soundTable.setModel ( sounds );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        soundTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        insertCommand = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        insertFile = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        insertPattern = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        soundTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Command", "Chair Pattern", "Wave File Path"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(soundTable);
        if (soundTable.getColumnModel().getColumnCount() > 0) {
            soundTable.getColumnModel().getColumn(1).setResizable(false);
            soundTable.getColumnModel().getColumn(1).setPreferredWidth(80);
        }

        jLabel1.setText("Command:");

        jLabel2.setText("Wave File:");

        insertFile.setEditable(false);
        insertFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insertFileMouseClicked(evt);
            }
        });
        insertFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertFileActionPerformed(evt);
            }
        });

        jLabel3.setText("Chair Pattern:");

        insertPattern.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Top 4", "Bottom 4", "All" }));

        jButton1.setText("Insert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Delete");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(insertPattern, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(insertCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(insertFile)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insertCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(insertFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(insertPattern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(19, 19, 19))
        );

        setSize(new java.awt.Dimension(542, 472));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void insertFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertFileActionPerformed
        
    }//GEN-LAST:event_insertFileActionPerformed

    private void insertFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertFileMouseClicked
        
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter ( new SoundsFilter() );
        int returnVal = fc.showOpenDialog ( this );

        if ( returnVal == JFileChooser.APPROVE_OPTION ) {
            chosenFile = fc.getSelectedFile();
            insertFile.setText ( chosenFile.getAbsolutePath() );
        }
        
    }//GEN-LAST:event_insertFileMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        /* validates the form */
        if ( !insertFile.getText().isEmpty() && !insertCommand.getText().isEmpty() ) {
            Path destinationPath = Paths.get ( ServerGUI.getSoundsPath() + chosenFile.getName() );
            Path sourcePath = Paths.get ( chosenFile.getAbsolutePath() );

            ChairPattern pattern = null;
            String selectedItem = insertPattern.getSelectedItem().toString();
            
            if ( selectedItem.equals ( "All" ) ) {
                pattern = ChairPattern.ALL;
            }
            else if ( selectedItem.equals ( "Top 4" ) ) {
                pattern = ChairPattern.TOP4;
            }
            else if ( selectedItem.equals ( "Bottom 4" ) ) {
                pattern = ChairPattern.BOTTOM4;
            }
            
            try {
                
                Files.copy ( sourcePath, destinationPath );
                
                
                sounds.addRow ( new Sound ( insertCommand.getText(), pattern, destinationPath.toAbsolutePath().toString() ) );
                
                resetForm();
                
                JOptionPane.showMessageDialog ( null, "Command saved.", "Command saved", JOptionPane.INFORMATION_MESSAGE );
            } catch ( FileAlreadyExistsException ex ) {
                insertFile.setText ( null );
                JOptionPane.showMessageDialog ( null, "A file with the same name already exists. Please rename the file.", "File already exists", JOptionPane.INFORMATION_MESSAGE );
            } catch (IOException ex) {
                ServerGUI.log.append ( "Cannot copy the wave file: " + ex );
            } catch (UnsupportedAudioFileException ex) {
                ServerGUI.log.append ( "Cannot copy the wave file: " + ex );
            }
        }
        else {
            JOptionPane.showMessageDialog ( null, "Please fill in \"Command\" and choose a \"Wave File\".", "Need more information", JOptionPane.INFORMATION_MESSAGE );
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void resetForm() {
        insertFile.setText ( null );
        insertPattern.setSelectedIndex ( 0 );
        insertCommand.setText ( null );
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField insertCommand;
    private javax.swing.JTextField insertFile;
    private javax.swing.JComboBox insertPattern;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable soundTable;
    // End of variables declaration//GEN-END:variables
}
